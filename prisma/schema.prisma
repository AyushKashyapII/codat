// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Codat {
  codatId             String      @id @default(uuid())
  codatName           String
  codatDescription    String
  codatAuthor         Profile     @relation("CodatAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  authorId            String
  codatCode           String      @db.Text
  codatLanguage       String      @db.VarChar(50)
  codatIsPublic       Boolean     @default(true)
  codatAIDesc         String
  codatAIFunc         String
  codatsSavedBy       Profile[]   @relation("CodatSaved")
  codatTeamsPartOf    Teams[]     @relation("TeamCodats")
  codatsCollectionPartOf Collections? @relation("CollectionCodats", fields: [collectionId], references: [collectionId])
  collectionId        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId, codatIsPublic])
  @@index([collectionId, createdAt])
}

model Teams {
  teamId         String    @id @default(uuid())
  teamName       String
  teamMembers    Profile[] @relation("TeamMembers")
  teamOwnerId    String
  teamOwner      Profile   @relation("TeamOwner", fields: [teamOwnerId], references: [id], onDelete: Cascade)
  teamModerators Profile[] @relation("TeamModerators")
  teamCodats     Codat[]   @relation("TeamCodats")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([teamId])
  @@index([teamOwnerId])
}

model Collections {
  collectionId       String   @id @default(uuid())
  collectionName     String
  collectionDesc     String
  collectionOwner    Profile  @relation("CollectionOwner", fields: [collectionOwnerId], references: [id], onDelete: Cascade)
  collectionOwnerId  String
  collectionCodats   Codat[]  @relation("CollectionCodats")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([collectionId])
  @@index([collectionOwnerId])
}

model Profile {
  id                 String       @id @default(uuid())
  email              String       @unique
  phoneNumber        String?      @unique
  name               String?      @default("Codat Profile") @unique
  password           String?
  image              String?      @db.Text
  attachedAiSearcher AiSearcher?  @relation("AiSearcher")
  teamsPartsOf       Teams[]      @relation("TeamMembers")
  teamsOwnerOf       Teams[]      @relation("TeamOwner")
  teamsModeratorOf   Teams[]      @relation("TeamModerators")
  codatsAuthored     Codat[]      @relation("CodatAuthor")
  codatsSaved        Codat[]      @relation("CodatSaved")
  codatsCollections  Collections[] @relation("CollectionOwner")
  usersFollowed      Profile[]    @relation("UserFollowed")
  usersFollowing     Profile[]    @relation("UserFollowed")

  @@index([id])
}

model AiSearcher {
  aiId              String  @id @default(uuid())
  attachedProfile   Profile @relation("AiSearcher", fields: [attachedProfileId], references: [id], onDelete: Cascade)
  attachedProfileId String  @unique
  textToPassToAI    Json    @default("[]")

  @@index([aiId])
}